---
export interface Props {
  courseId: string;
  courseTitle: string;
  isFree?: boolean;
}

const { courseId, courseTitle, isFree = false } = Astro.props;
---

<!-- Enrollment Modal -->
<div id="enrollment-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4">
  <div class="bg-white rounded-2xl shadow-2xl max-w-md w-full max-h-[90vh] overflow-y-auto">
    <!-- Modal Header -->
    <div class="bg-gradient-to-r from-primary-600 to-secondary-600 text-white p-6 rounded-t-2xl">
      <div class="flex items-center justify-between">
        <div>
          <h3 class="text-xl font-bold">
            {isFree ? 'Enroll for Free' : 'Course Enrollment'}
          </h3>
          <p class="text-primary-100 text-sm mt-1">{courseTitle}</p>
        </div>
        <button id="close-modal" class="text-white hover:text-gray-200 transition-colors">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Modal Content -->
    <div class="p-6">
      {isFree ? (
        <!-- Free Course Enrollment -->
        <div class="text-center mb-6">
          <div class="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
          </div>
          <h4 class="text-lg font-semibold text-gray-900 mb-2">Free Course Access</h4>
          <p class="text-gray-600">Get instant access to the complete video series and course materials.</p>
        </div>
      ) : (
        <!-- Paid Course Enrollment -->
        <div class="text-center mb-6">
          <div class="w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
            </svg>
          </div>
          <h4 class="text-lg font-semibold text-gray-900 mb-2">Course Enrollment</h4>
          <p class="text-gray-600">Join thousands of students and advance your career with expert training.</p>
        </div>
      )}

      <!-- Enrollment Form -->
      <form id="enrollment-form" class="space-y-4">
        <input type="hidden" name="courseId" value={courseId} />
        <input type="hidden" name="isFree" value={isFree.toString()} />
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label for="firstName" class="block text-sm font-medium text-gray-700 mb-1">First Name *</label>
            <input 
              type="text" 
              id="firstName"
              name="firstName"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
            />
          </div>
          <div>
            <label for="lastName" class="block text-sm font-medium text-gray-700 mb-1">Last Name *</label>
            <input 
              type="text" 
              id="lastName"
              name="lastName"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
            />
          </div>
        </div>
        
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email Address *</label>
          <input 
            type="email" 
            id="email"
            name="email"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
          />
        </div>
        
        <div>
          <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number *</label>
          <input 
            type="tel" 
            id="phone"
            name="phone"
            required
            placeholder="+92 XXX XXXXXXX"
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
          />
        </div>

        <div>
          <label for="experience" class="block text-sm font-medium text-gray-700 mb-1">Current Experience Level</label>
          <select 
            id="experience"
            name="experience"
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
          >
            <option value="">Select your level</option>
            <option value="beginner">Complete Beginner</option>
            <option value="some-experience">Some Experience</option>
            <option value="intermediate">Intermediate</option>
            <option value="advanced">Advanced</option>
          </select>
        </div>

        <div>
          <label for="goals" class="block text-sm font-medium text-gray-700 mb-1">Learning Goals (Optional)</label>
          <textarea 
            id="goals"
            name="goals"
            rows="3"
            placeholder="What do you hope to achieve with this course?"
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
          ></textarea>
        </div>

        <!-- Terms and Conditions -->
        <div class="flex items-start space-x-2">
          <input 
            type="checkbox" 
            id="terms"
            name="terms"
            required
            class="mt-1 h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
          />
          <label for="terms" class="text-sm text-gray-600">
            I agree to the <a href="#" class="text-primary-600 hover:text-primary-700">Terms of Service</a> and 
            <a href="#" class="text-primary-600 hover:text-primary-700">Privacy Policy</a> *
          </label>
        </div>

        <!-- Submit Button -->
        <button 
          type="submit"
          class="w-full bg-primary-600 text-white py-3 rounded-lg font-semibold hover:bg-primary-700 transition-colors flex items-center justify-center space-x-2"
        >
          <span>{isFree ? 'Get Free Access' : 'Enroll Now'}</span>
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </button>
      </form>

      {isFree && (
        <div class="mt-6 p-4 bg-green-50 border border-green-200 rounded-lg">
          <h5 class="font-semibold text-green-900 mb-2">What's Included (Free):</h5>
          <ul class="text-sm text-green-800 space-y-1">
            <li class="flex items-center space-x-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              <span>Complete video training series</span>
            </li>
            <li class="flex items-center space-x-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              <span>Course materials and resources</span>
            </li>
            <li class="flex items-center space-x-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              <span>WhatsApp community access</span>
            </li>
            <li class="flex items-center space-x-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              <span>Certificate of completion</span>
            </li>
          </ul>
        </div>
      )}
    </div>
  </div>
</div>

<script>
  // Modal functionality
  document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('enrollment-modal');
    const closeBtn = document.getElementById('close-modal');
    const form = document.getElementById('enrollment-form');
    
    // Close modal function
    function closeModal() {
      modal?.classList.add('hidden');
      document.body.style.overflow = 'auto';
    }
    
    // Close modal on button click
    closeBtn?.addEventListener('click', closeModal);
    
    // Close modal on backdrop click
    modal?.addEventListener('click', function(e) {
      if (e.target === modal) {
        closeModal();
      }
    });
    
    // Close modal on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && !modal?.classList.contains('hidden')) {
        closeModal();
      }
    });
    
    // Form submission
    form?.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = new FormData(form);
      const data = Object.fromEntries(formData);
      
      // Basic validation
      if (!data.firstName || !data.lastName || !data.email || !data.phone || !data.terms) {
        alert('Please fill in all required fields and accept the terms.');
        return;
      }
      
      // Email validation
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(data.email)) {
        alert('Please enter a valid email address.');
        return;
      }
      
      // Simulate enrollment process
      const submitBtn = form.querySelector('button[type="submit"]');
      const originalText = submitBtn.innerHTML;
      
      submitBtn.innerHTML = '<svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Processing...';
      submitBtn.disabled = true;
      
      try {
        // Store enrollment data in PostgreSQL database via API
        const response = await fetch('/api/enrollment', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (!response.ok || !result.success) {
          throw new Error(result.error || 'Failed to submit enrollment');
        }
        
        if (data.isFree === 'true') {
          alert(`🎉 Congratulations! You've successfully enrolled in the ${data.courseId} course.\n\nYou now have access to:\n• Complete video training series\n• Course materials\n• WhatsApp community\n• Certificate upon completion\n\nCheck your email for access details!`);
        } else {
          alert(`Thank you for your interest in ${data.courseId}!\n\nOur team will contact you within 24 hours to complete the enrollment process and discuss payment options.\n\nYou can also reach us directly via WhatsApp for immediate assistance.`);
        }
        
        closeModal();
        form.reset();
      } catch (error) {
        console.error('Enrollment error:', error);
        alert('Sorry, there was an error processing your enrollment. Please try again or contact us directly.');
      } finally {
        submitBtn.innerHTML = originalText;
        submitBtn.disabled = false;
      }
    });
  });
  
  // Global function to open enrollment modal
  window.openEnrollmentModal = function() {
    const modal = document.getElementById('enrollment-modal');
    modal?.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
  };
</script>
