---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import YouTubePlaylist from '../../components/YouTubePlaylist.astro';
import EnrollmentModal from '../../components/EnrollmentModal.astro';
import { courses } from '../../data/courses.js';
import { trainers } from '../../data/trainers.js';

export async function getStaticPaths() {
  return courses.map(course => ({
    params: { id: course.id },
    props: { course }
  }));
}

const { course } = Astro.props;
const trainer = trainers.find(t => t.courses.includes(course.id));
const relatedCourses = courses.filter(c => c.id !== course.id && c.level === course.level).slice(0, 3);

// YouTube playlist for Open Source VoIP course
const youtubePlaylistId = course.id === 'open-source-voip' ? 'PLe-5mmZeZbmhFG8u8rHkcFUKr0PEmimY3' : null;
---

<Layout title={`${course.title} - LbisTech Training`}>
  <Header />
  <main class="pt-20">
    <!-- Hero Section -->
    <section class="bg-gradient-to-br from-primary-50 via-white to-secondary-50 py-20">
      <div class="container mx-auto px-4">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
          <div class="space-y-8">
            <div>
              <div class="flex items-center space-x-4 mb-4">
                <span class={`px-3 py-1 text-sm font-semibold rounded-full ${
                  course.level === 'Beginner' ? 'bg-green-100 text-green-800' :
                  course.level === 'Intermediate' ? 'bg-yellow-100 text-yellow-800' :
                  'bg-red-100 text-red-800'
                }`}>
                  {course.level}
                </span>
                <span class="text-gray-600">{course.duration}</span>
                {course.isFree && (
                  <span class="bg-green-500 text-white px-3 py-1 text-sm font-semibold rounded-full">
                    FREE COURSE
                  </span>
                )}
              </div>
              <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
                {course.title}
              </h1>
              <p class="text-xl text-gray-600 mb-8">
                {course.description}
              </p>
            </div>

            <!-- Course Stats -->
            <div class="grid grid-cols-3 gap-4 py-6">
              <div class="text-center">
                <div class="text-3xl font-bold text-primary-600">{course.students}</div>
                <div class="text-sm text-gray-600">Students</div>
              </div>
              <div class="text-center">
                <div class="text-3xl font-bold text-secondary-600">{course.duration}</div>
                <div class="text-sm text-gray-600">Duration</div>
              </div>
              <div class="text-center">
                <div class="text-3xl font-bold text-accent-600">{course.level}</div>
                <div class="text-sm text-gray-600">Level</div>
              </div>
            </div>

            <!-- Price and CTA -->
            <div class="bg-white p-8 rounded-2xl shadow-lg">
              <div class="flex items-center justify-between mb-6">
                <div>
                  {course.isFree ? (
                    <div class="flex items-center space-x-3">
                      <span class="text-4xl font-bold text-green-600">Free</span>
                      <div class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-semibold">
                        Limited Time
                      </div>
                    </div>
                  ) : (
                    <div class="flex items-center space-x-4">
                      <span class="text-4xl font-bold text-primary-600">
                        PKR {course.price.toLocaleString()}
                      </span>
                      {course.originalPrice && (
                        <span class="text-xl text-gray-500 line-through">
                          PKR {course.originalPrice.toLocaleString()}
                        </span>
                      )}
                    </div>
                  )}
                </div>
              </div>
              <button 
                onclick="openEnrollmentModal()"
                class="w-full bg-primary-600 text-white py-4 rounded-lg font-semibold hover:bg-primary-700 transition-colors text-lg"
              >
                {course.isFree ? 'Enroll for Free' : 'Enroll Now'}
              </button>
              <p class="text-center text-gray-600 mt-4">
                {course.isFree ? 'ðŸŽ‰ Completely free with certificate' : 'ðŸ’³ Flexible payment options available'}
              </p>
            </div>
          </div>

          <!-- Course Image -->
          <div class="relative">
            <img 
              src={course.image} 
              alt={course.title}
              class="w-full h-96 object-cover rounded-2xl shadow-2xl"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent rounded-2xl"></div>
            {course.isFree && (
              <div class="absolute top-4 right-4">
                <span class="bg-green-500 text-white px-4 py-2 text-sm font-bold rounded-full shadow-lg">
                  100% FREE
                </span>
              </div>
            )}
          </div>
        </div>
      </div>
    </section>

    <!-- YouTube Playlist Section (Only for VoIP course) -->
    {youtubePlaylistId && (
      <section class="py-20 bg-gray-50">
        <div class="container mx-auto px-4">
          <div class="max-w-4xl mx-auto">
            <div class="text-center mb-12">
              <h2 class="text-3xl font-bold text-gray-900 mb-4">Complete Video Training Series</h2>
              <p class="text-lg text-gray-600">
                Watch our comprehensive Open Source VoIP training playlist with step-by-step tutorials
              </p>
            </div>
            <YouTubePlaylist 
              playlistId={youtubePlaylistId} 
              title="Open Source VoIP Complete Training"
            />
          </div>
        </div>
      </section>
    )}

    <!-- Course Content -->
    <section class="py-20">
      <div class="container mx-auto px-4">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-12">
          <!-- Main Content -->
          <div class="lg:col-span-2 space-y-12">
            <!-- Features -->
            <div>
              <h2 class="text-3xl font-bold text-gray-900 mb-6">What You'll Learn</h2>
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                {course.features.map(feature => (
                  <div class="flex items-start space-x-3 p-4 bg-gray-50 rounded-lg">
                    <svg class="w-6 h-6 text-green-500 mt-1 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-700">{feature}</span>
                  </div>
                ))}
              </div>
            </div>

            <!-- Interactive Course Curriculum -->
            <div>
              <h2 class="text-3xl font-bold text-gray-900 mb-8">Course Curriculum</h2>
              <div class="bg-white rounded-2xl shadow-lg p-6">
                <div class="flex items-center justify-between mb-6">
                  <div class="flex items-center space-x-4">
                    <div class="text-2xl font-bold text-primary-600">{course.curriculum.length}</div>
                    <div class="text-gray-600">Modules</div>
                    <div class="w-px h-6 bg-gray-300"></div>
                    <div class="text-2xl font-bold text-secondary-600">{course.curriculum.reduce((total, module) => total + module.topics.length, 0)}</div>
                    <div class="text-gray-600">Topics</div>
                  </div>
                  <div class="text-sm text-gray-500">Click on modules to view topics</div>
                </div>
                
                <div class="space-y-4" id="curriculum-modules">
                  {course.curriculum.map((module, moduleIndex) => (
                    <div class="border border-gray-200 rounded-xl overflow-hidden curriculum-module">
                      <!-- Module Header (Clickable) -->
                      <button 
                        class="w-full p-6 bg-gradient-to-r from-gray-50 to-gray-100 hover:from-primary-50 hover:to-primary-100 transition-all duration-300 text-left module-header"
                        data-module={moduleIndex}
                      >
                        <div class="flex items-center justify-between">
                          <div class="flex items-center space-x-4">
                            <div class="w-12 h-12 bg-primary-600 text-white rounded-full flex items-center justify-center font-bold text-lg">
                              {moduleIndex + 1}
                            </div>
                            <div>
                              <h3 class="text-xl font-bold text-gray-900 mb-1">{module.module}</h3>
                              <p class="text-gray-600 text-sm">{module.topics.length} topics â€¢ Click to expand</p>
                            </div>
                          </div>
                          <div class="flex items-center space-x-3">
                            <div class="bg-primary-100 text-primary-800 px-3 py-1 rounded-full text-sm font-medium">
                              {module.topics.length} Topics
                            </div>
                            <svg class="w-6 h-6 text-gray-400 transform transition-transform duration-300 expand-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                          </div>
                        </div>
                      </button>
                      
                      <!-- Module Content (Hidden by default) -->
                      <div class="module-content hidden">
                        <div class="p-6 bg-white border-t border-gray-100">
                          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            {module.topics.map((topic, topicIndex) => (
                              <div class="flex items-start space-x-3 p-4 bg-gray-50 rounded-lg hover:bg-primary-50 transition-colors group">
                                <div class="w-8 h-8 bg-white border-2 border-primary-200 group-hover:border-primary-400 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                                  <span class="text-primary-600 font-semibold text-sm">{topicIndex + 1}</span>
                                </div>
                                <div>
                                  <span class="text-gray-800 font-medium text-sm leading-relaxed">{topic}</span>
                                </div>
                              </div>
                            ))}
                          </div>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            <!-- Prerequisites -->
            <div>
              <h2 class="text-3xl font-bold text-gray-900 mb-6">Prerequisites</h2>
              <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-6">
                <ul class="space-y-2">
                  {course.prerequisites.map(prereq => (
                    <li class="flex items-start space-x-2">
                      <svg class="w-5 h-5 text-yellow-600 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                      </svg>
                      <span class="text-gray-700">{prereq}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </div>

            <!-- Certification -->
            <div>
              <h2 class="text-3xl font-bold text-gray-900 mb-6">Certification</h2>
              <div class="bg-green-50 border border-green-200 rounded-lg p-6">
                <div class="flex items-center space-x-4">
                  <div class="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
                    <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                  </div>
                  <div>
                    <h3 class="font-semibold text-gray-900 mb-1">{course.certification}</h3>
                    <p class="text-gray-600">
                      {course.isFree ? 'Free certificate upon successful completion' : 'Industry-recognized certification upon successful completion'}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Sidebar -->
          <div class="space-y-8">
            <!-- Course Stats -->
            <div class="bg-white p-6 rounded-2xl shadow-lg">
              <h3 class="text-xl font-bold text-gray-900 mb-4">Course Overview</h3>
              <div class="space-y-4">
                <div class="flex justify-between items-center">
                  <span class="text-gray-600">Total Modules</span>
                  <span class="font-semibold text-gray-900">{course.curriculum.length}</span>
                </div>
                <div class="flex justify-between items-center">
                  <span class="text-gray-600">Total Topics</span>
                  <span class="font-semibold text-gray-900">{course.curriculum.reduce((total, module) => total + module.topics.length, 0)}</span>
                </div>
                <div class="flex justify-between items-center">
                  <span class="text-gray-600">Duration</span>
                  <span class="font-semibold text-gray-900">{course.duration}</span>
                </div>
                <div class="flex justify-between items-center">
                  <span class="text-gray-600">Level</span>
                  <span class={`px-2 py-1 rounded-full text-xs font-semibold ${
                    course.level === 'Beginner' ? 'bg-green-100 text-green-800' :
                    course.level === 'Intermediate' ? 'bg-yellow-100 text-yellow-800' :
                    'bg-red-100 text-red-800'
                  }`}>
                    {course.level}
                  </span>
                </div>
                <div class="flex justify-between items-center">
                  <span class="text-gray-600">Price</span>
                  <span class="font-semibold text-gray-900">
                    {course.isFree ? (
                      <span class="text-green-600 font-bold">FREE</span>
                    ) : (
                      `PKR ${course.price.toLocaleString()}`
                    )}
                  </span>
                </div>
              </div>
            </div>

            <!-- Instructor -->
            {trainer && (
              <div class="bg-white p-6 rounded-2xl shadow-lg">
                <h3 class="text-xl font-bold text-gray-900 mb-4">Your Instructor</h3>
                <div class="text-center">
                  <img 
                    src={trainer.image} 
                    alt={trainer.name}
                    class="w-20 h-20 rounded-full mx-auto mb-4 object-cover"
                  />
                  <h4 class="font-semibold text-gray-900 mb-1">{trainer.name}</h4>
                  <p class="text-gray-600 text-sm mb-4">{trainer.title}</p>
                  <div class="grid grid-cols-2 gap-4 text-center mb-4">
                    <div>
                      <div class="text-2xl font-bold text-primary-600">{trainer.students}</div>
                      <div class="text-xs text-gray-600">Students</div>
                    </div>
                    <div>
                      <div class="text-2xl font-bold text-secondary-600">{trainer.experience}</div>
                      <div class="text-xs text-gray-600">Experience</div>
                    </div>
                  </div>
                  <a href={`/trainers/${trainer.id}`} class="text-primary-600 hover:text-primary-700 text-sm font-medium">
                    View Profile â†’
                  </a>
                </div>
              </div>
            )}

            <!-- Course Features -->
            <div class="bg-white p-6 rounded-2xl shadow-lg">
              <h3 class="text-xl font-bold text-gray-900 mb-4">Course Includes</h3>
              <div class="space-y-3">
                {course.isFree ? (
                  <>
                    <div class="flex items-center space-x-3">
                      <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span class="text-gray-700">Complete video series</span>
                    </div>
                    <div class="flex items-center space-x-3">
                      <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span class="text-gray-700">Course materials</span>
                    </div>
                    <div class="flex items-center space-x-3">
                      <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span class="text-gray-700">WhatsApp community</span>
                    </div>
                    <div class="flex items-center space-x-3">
                      <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span class="text-gray-700">Free certificate</span>
                    </div>
                  </>
                ) : (
                  <>
                    <div class="flex items-center space-x-3">
                      <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span class="text-gray-700">Live weekend sessions</span>
                    </div>
                    <div class="flex items-center space-x-3">
                      <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span class="text-gray-700">Hands-on lab exercises</span>
                    </div>
                    <div class="flex items-center space-x-3">
                      <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span class="text-gray-700">24/7 community support</span>
                    </div>
                    <div class="flex items-center space-x-3">
                      <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span class="text-gray-700">Lifetime access</span>
                    </div>
                    <div class="flex items-center space-x-3">
                      <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span class="text-gray-700">Certification preparation</span>
                    </div>
                  </>
                )}
              </div>
            </div>

            <!-- Contact Support -->
            <div class="bg-primary-50 p-6 rounded-2xl">
              <h3 class="text-xl font-bold text-gray-900 mb-4">Need Help?</h3>
              <p class="text-gray-600 mb-4">
                Have questions about this course? Our team is here to help!
              </p>
              <div class="space-y-3">
                <a href="/contact" class="block w-full bg-primary-600 text-white py-3 rounded-lg font-semibold hover:bg-primary-700 transition-colors text-center">
                  Contact Us
                </a>
                <a href="https://wa.me/+92xxxxxxxxx" class="block w-full bg-green-600 text-white py-3 rounded-lg font-semibold hover:bg-green-700 transition-colors text-center">
                  WhatsApp Support
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Related Courses -->
    {relatedCourses.length > 0 && (
      <section class="py-20 bg-gray-50">
        <div class="container mx-auto px-4">
          <h2 class="text-3xl font-bold text-gray-900 mb-12 text-center">Related Courses</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {relatedCourses.map(relatedCourse => (
              <div class="bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow">
                <img 
                  src={relatedCourse.image} 
                  alt={relatedCourse.title}
                  class="w-full h-48 object-cover"
                />
                <div class="p-6">
                  <h3 class="text-xl font-bold text-gray-900 mb-2">{relatedCourse.title}</h3>
                  <p class="text-gray-600 mb-4">{relatedCourse.description}</p>
                  <div class="flex items-center justify-between">
                    {relatedCourse.isFree ? (
                      <span class="text-2xl font-bold text-green-600">Free</span>
                    ) : (
                      <span class="text-2xl font-bold text-primary-600">
                        PKR {relatedCourse.price.toLocaleString()}
                      </span>
                    )}
                    <a 
                      href={`/courses/${relatedCourse.id}`}
                      class="bg-primary-600 text-white px-6 py-2 rounded-lg font-semibold hover:bg-primary-700 transition-colors"
                    >
                      View Course
                    </a>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )}
  </main>
  <Footer />

  <!-- Enrollment Modal -->
  <EnrollmentModal 
    courseId={course.id}
    courseTitle={course.title}
    isFree={course.isFree}
  />
</Layout>

<script>
  // Interactive curriculum functionality
  document.addEventListener('DOMContentLoaded', function() {
    const moduleHeaders = document.querySelectorAll('.module-header');
    
    moduleHeaders.forEach(header => {
      header.addEventListener('click', function() {
        const moduleIndex = this.getAttribute('data-module');
        const module = this.closest('.curriculum-module');
        const content = module.querySelector('.module-content');
        const icon = this.querySelector('.expand-icon');
        
        // Toggle content visibility
        if (content.classList.contains('hidden')) {
          // Show content
          content.classList.remove('hidden');
          content.style.maxHeight = content.scrollHeight + 'px';
          icon.style.transform = 'rotate(180deg)';
          
          // Add active state to header
          this.classList.add('bg-primary-100');
          this.classList.remove('hover:from-primary-50', 'hover:to-primary-100');
        } else {
          // Hide content
          content.style.maxHeight = '0px';
          setTimeout(() => {
            content.classList.add('hidden');
          }, 300);
          icon.style.transform = 'rotate(0deg)';
          
          // Remove active state from header
          this.classList.remove('bg-primary-100');
          this.classList.add('hover:from-primary-50', 'hover:to-primary-100');
        }
      });
    });
  });
</script>

<style>
  .module-content {
    transition: max-height 0.3s ease-in-out;
    overflow: hidden;
  }
  
  .expand-icon {
    transition: transform 0.3s ease-in-out;
  }
  
  .module-header:hover .expand-icon {
    color: #2563eb;
  }
</style>